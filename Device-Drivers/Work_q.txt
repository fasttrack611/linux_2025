#include <linux/module.h>
#include <linux/init.h>
#include <linux/workqueue.h>

MODULE_LICENSE("GPL");

static struct workqueue_struct *my_workqueue;
static struct delayed_work my_delayed_work;

static void my_workqueue_function(struct work_struct *work)
{
    printk(KERN_INFO "Workqueue: workqueue function called\n");
}

static void my_delayed_work_function(struct work_struct *work)
{
    printk(KERN_INFO "Workqueue: delayed work function called\n");
}

static int __init my_init(void)
{
    my_workqueue = create_workqueue("my_workqueue");

    INIT_DELAYED_WORK(&my_delayed_work, my_delayed_work_function);
    queue_delayed_work(my_workqueue, &my_delayed_work, msecs_to_jiffies(5000));

    return 0;
}

static void __exit my_exit(void)
{
    cancel_delayed_work_sync(&my_delayed_work);
    flush_workqueue(my_workqueue);
    destroy_workqueue(my_workqueue);
}

module_init(my_init);
module_exit(my_exit);
